---
# Copyright (C) 2020 Stefan Hornburg (Racke) <racke@linuxia.de>
# SPDX-License-Identifier: Artistic-2.0

- name: Include variables depending on OS details
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_os_family }}.yml'
        - 'defaults.yml'
      paths:
        - 'vars'

- name: facts | set
  set_fact:
     is_docker_guest: "{{ ansible_virtualization_role | default('host') == 'guest' and ansible_virtualization_type | default('none') == 'docker' }}"
  tags:
    - configuration
    - postfix
    - postfix-facts

- name: configure debconf
  debconf:
    name: "{{ item.name }}"
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  with_items: "{{ postfix_debconf_selections }}"
  when: ansible_os_family == 'Debian'
  tags:
    - configuration
    - postfix
    - postfix-install

- name: install package
  package:
    name: "{{ postfix_install }}"
    state: present
  tags:
    - configuration
    - postfix
    - postfix-install

- name: configure mailname
  template:
    src: "mailname.j2"
    dest: "{{ postfix_mailname_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify: restart postfix
  tags:
    - configuration
    - postfix
    - postfix-mailname

- name: update main configuration file
  template:
    src: "main.cf.j2"
    dest: "{{ postfix_main_cf }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify: restart postfix
  tags:
    - configuration
    - postfix
    - postfix-configuration

- name: update master configuration file
  blockinfile:
    path: "{{ postfix_master_cf }}"
    block: "{{ postfix_master_config_block | default(omit) }}"
    marker: "# {mark} Custom configuration"
  notify: restart postfix
  tags:
    - configuration
    - postfix
    - postfix-configuration

- name: configure sasl username/password
  template:
    src: "sasl_passwd.j2"
    dest: "{{ postfix_sasl_passwd_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0600
  when:
    - postfix_sasl_auth_enable | bool
    - postfix_relayhost | length
  no_log: not ansible_check_mode
  notify:
    - postmap sasl_passwd
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-sasl-passwd

- name: configure aliases
  template:
    src: "aliases.j2"
    dest: "{{ postfix_aliases_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - new aliases
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-aliases

- name: check if aliases.db exists
  stat:
    path: "{{ postfix_aliases_file }}.db"
  register: _aliasesdb
  changed_when: not _aliasesdb.stat.exists
  when: postfix_default_database_type == 'hash'
  notify:
    - new aliases
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-aliases

- name: configure virtual aliases
  copy:
    dest: "{{ postfix_virtual_aliases_file }}"
    content: |
      {% for item in postfix_virtual_aliases %}
      {{ item.virtual }} {{ item.alias }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - new virtual aliases
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-virtual-aliases

- name: configure sender canonical maps
  copy:
    dest: "{{ postfix_sender_canonical_maps_file }}"
    content: |
      {% for item in postfix_sender_canonical_maps %}
      {{ item.sender }} {{ item.rewrite }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - postmap sender_canonical_maps
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-sender-canonical-maps

- name: configure recipient canonical maps
  copy:
    dest: "{{ postfix_recipient_canonical_maps_file }}"
    content: |
      {% for item in postfix_recipient_canonical_maps %}
      {{ item.recipient }} {{ item.rewrite }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - postmap recipient_canonical_maps
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-recipient-canonical-maps

- name: configure transport maps
  copy:
    dest: "{{ postfix_transport_maps_file }}"
    content: |
      {% for item in postfix_transport_maps %}
      {{ item.pattern }} {{ item.result }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - postmap transport_maps
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-transport-maps

- name: configure sender dependent relayhost maps
  copy:
    dest: "{{ postfix_sender_dependent_relayhost_maps_file }}"
    content: |
      {% for item in postfix_sender_dependent_relayhost_maps %}
      {{ item.pattern }} {{ item.result }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - postmap sender_dependent_relayhost_maps
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-sender-dependent-relayhost-maps

- name: configure generic table
  copy:
    dest: "{{ postfix_generic_file }}"
    content: |
      {% for item in postfix_generic %}
      {{ item.pattern }} {{ item.result }}
      {% endfor %}
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - postmap generic
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-generic-table

- name: configure header checks
  template:
    src: "header_checks.j2"
    dest: "{{ postfix_header_checks_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - restart postfix
  tags:
    - configuration
    - postfix
    - postfix-header-checks-table

- name: start and enable service
  service:
    name: postfix
    state: "{{ service_default_state | default('started') }}"
    enabled: "{{ service_default_enabled | default(true) | bool }}"
  tags:
    - configuration
    - postfix
    - postfix-start-enable-service
